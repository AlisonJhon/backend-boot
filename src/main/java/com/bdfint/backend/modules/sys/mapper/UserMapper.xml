<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdfint.backend.modules.sys.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.bdfint.backend.modules.sys.bean.User" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="company_id" property="companyId" jdbcType="VARCHAR" />
        <result column="office_id" property="officeId" jdbcType="VARCHAR" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="no" property="no" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="user_type" property="userType" jdbcType="CHAR" />
        <result column="photo" property="photo" jdbcType="VARCHAR" />
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
        <result column="login_date" property="loginDate" jdbcType="TIMESTAMP" />
        <result column="login_flag" property="loginFlag" jdbcType="VARCHAR" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    </resultMap>

    <sql id="Base_Column_List">
        id, company_id, office_id, login_name, password, no, name, email, phone, mobile,
        user_type, photo, login_ip, login_date, login_flag, create_by, create_date, update_by,
        update_date, remarks, del_flag
    </sql>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
        DELETE FROM sys_user_role WHERE user_id = #{userId}
    </delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roleList" item="role" separator=" union all ">
            SELECT #{id}, #{role.id}
        </foreach>
    </insert>

    <!-- 根据roleId查询用户 -->
    <select id="selectUserByRoleId" resultType="User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user a
        LEFT JOIN sys_user_role sur ON sur.user_id = a.id
        WHERE a.del_flag = 0 AND sur.role_id = #{roleId}
    </select>

</mapper>